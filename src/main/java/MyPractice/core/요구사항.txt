*복습하기*
1. 고객 - 회원가입, 찾기 기능이 있음.
2. 주문 - 고객 등급에 따른 할인율 적용
3. 저장소 - 미정

--------------------------------------------------
시나리오 1

맞은부분
********맴버***********
맴버 저장소가 미정이기 때문에 저장소 기능을 인터페이스로 구현
맴버 저장소 인터페이스를 상속받고 메모리에서 구동할 수 있도록 클래스 하나 생성

맴버 서비스 인터페이스구현
MemberServiceImpl > 저장소에 저장을 해야하기 때문에 MemoryMemberRepository를 new키워드로 생성하여 저장
************************

틀린부분
*** 1. Order 객체를 따로 생성해야함 ***
*** 2. orderService 파라미터 부분 틀렸음 ***
*** 3. memmoryRepository의 Map에 private static을 붙이지 않아서 계속 새로 생성되어 널포인터 에러가 발생하는 문제가 있었다. 꼭 붙이길 ***


--------------------------------------------------


--------------------------------------------------
시나리오 2

시나리오 1의 문제점
1. 고정 할인 정책에서 퍼센트 할인 정책으로 변경하고 싶을 경우 orderSerivce의 new RateDiscountPolicy() 로 변경해주기만 하면된다.
   하지만 이것은 Service 즉 클라이언트 측 코드의 수정이 일어나기 때문에 OCP와 DIP에 위반이 일어난다. 따라서 클라이언트 쪽에서 수정이 일어나지 않도록 변경해주어야함.

  > 따라서 각 코드에 생성자를 통해 주입하도록 변경을 했지만 각각의 소스들을 수정해야하는 번거로움이 발생한다. 따라서 관심사를 분리하여 구현 객체를 생성하고 연겷을 책임지는
    AppConfig.class 별도의 설정 클래스를 만들어서 해결해준다.

--------------------------------------------------

--------------------------------------------------
시나리오 3

- 스프링으로 전환하기
AppConfig.class 는 단순 클래스 파일에 불과하다. 따라서 스프링에서 관리하고 주입받기 위해서는 스프링 설정파일이라는 것을 명시시켜줘야 한다.
스프링 설정 파일 명시 방법은 클래스 파일 이름 위에 @Configuraion을 적어주면 된다. 그리고 각각 생성해주는 메소드에 @Bean을 적어 객체로 등록하면 된다.

기존 Appconfig를 이용해서 객체를 받아와서 사용하는 것보다 AnnocationConfigApplicationContext를 이용하면 더 복잡해지는 느낌이 들지만
하지만 스프링 컨테이너에서 등록해서 사용할 경우 아주 많은 강점들이 존재한다.

ApplicationContext를 스프링 컨테이너이며 인터페이스다.
스프링 컨테이너는 xml을 기반해서 만들 수 있고 애노테이션 기반의 자바 설정 클래스로도 만들 수 있다.

스프링 컨테이너는 정확하게 BeanFactory ApplicationContext로 나누지만 BeanFactory는 직접 다룰일이 거의 없기 때문에 ApplicationContext를 대부분 스프링 컨테이너라 함

빈으로 조회할때 타입이 두개일 경우에는 오류가 발생한다. 이럴때 어떻게 해결할까 ?
1. 메소드 이름으로 같이 조회하거나 부모 타입으로 다 받아서 꺼내쓰도록 한다.

스프링 컨테이너는 싱글톤을 보장해주기때문에 @Configuration을 꼭 사용하자.


--------------------------------------------------

--------------------------------------------------
시나리오 4

시나리오 3번도 굉장히 간단해지고 좋지만 관리해야될 빈이 수천개가 된다고 가정하면 그것 또한 관리가 힘들어진다.

따라서 더욱 쉬운 방법이 나타난다 !

그래서 스프링 설정 정보가 없어도 자동으로 스프링 빈으로 등록하는 컴포넌트 스캔이라는 기능을 제공한다.

또한 의존 관계도 자동으로 주입해주는 Autowried가 잇다.

** Appconfig 스프링 코드 지우기 ***

컴포넌트 스캔을 사용하려면 해당 클래스 파일 위에 @ComponentScan을 붙이면 된다.

@ComponentScan(
        excludeFilters = @ComponentScan.Filter(type= FilterType.ANNOTATION, classes = Configuration.class)
)

컴포넌트 스캔을 사용하면 @configuration이 붙은 설정 정보도 자동으로 등록이 된다. 제외하고 싶을 경우엔 저거를 쓰면 된다.

먼저 지웟기 때문에 쓸 필요는 없다.

따라서 이제 스프링 빈에다 등록할 객체들을 @Component를 붙여주면 된다. 그리고 의존관계 주입이 필요한 곳에 @Autowired를 붙인다 !

빈 이름 기본 전략 MemberSerivceImpl > memberServiceImpl 로 해야댐 앞글자가 소문자로 바뀜

* 애노테이션은 상속관계가 없다. 그래서 애노테이션이 특정 애노테이션을 들고 있는 것을 인식할 수있는것은 자바가 지원하는게 아니라 스프링이 지원하는 것이다.

--------------------------------------------------